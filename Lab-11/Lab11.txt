Point 1:

#include <LWiFi.h>
#include <WiFiClient.h>
#include "MCS.h"
#define _SSID "Pixel"
#define _KEY  "aa535646"
MCSDevice mcs("DYGT8Pas", "qo0LasSaLeBHVfmz");
MCSControllerOnOff led("123");
MCSDisplayOnOff    remote("456");
#define LED_PIN 6

void setup() {
Serial.begin(9600);
pinMode(LED_PIN, OUTPUT);
while(WL_CONNECTED != WiFi.status())
{
    Serial.print("WiFi.begin(");
Serial.print(_SSID);
Serial.print(",");
Serial.print(_KEY);
Serial.println(")...");
WiFi.begin(_SSID, _KEY);
}
Serial.println("WiFi connected !!");
mcs.addChannel(led);
mcs.addChannel(remote);
while(!mcs.connected())
{
   Serial.println("MCS.connect()...");
   mcs.connect();
  }
  Serial.println("MCS connected !!");
  while(!led.valid())
  {
    Serial.println("read LED value from MCS...");
    led.value();
  }
  Serial.print("done, LED value = ");
  Serial.println(led.value());
  digitalWrite(LED_PIN, led.value() ? HIGH : LOW);
}
void loop() {
  Serial.print("process(");
  Serial.print(millis());
  Serial.println(")");
  mcs.process(100);
  if(led.updated())
  {
    Serial.print("LED updated, new value = ");
    Serial.println(led.value());
    digitalWrite(LED_PIN, led.value() ? HIGH : LOW);
    if(!remote.set(led.value()))
    {
      Serial.print("Failed to update remote");
      Serial.println(remote.value());
    }
  }
  while(!mcs.connected())
  {
    Serial.println("re-connect to MCS...");
    mcs.connect();
    if(mcs.connected())
      Serial.println("MCS connected !!");
  }
}
 

Point 2:

#include <LWiFi.h>
#include <WiFiClient.h>
#include "MCS.h"
#define _SSID "Pixel"
#define _KEY  "aa535646"
MCSDevice mcs("DYGT8Pas", "qo0LasSaLeBHVfmz");
MCSDisplayInteger Temp("789");
void setup() {
Serial.begin(9600);
while(WL_CONNECTED != WiFi.status())
{
Serial.print("WiFi.begin(");
Serial.print(_SSID);
Serial.print(",");
Serial.print(_KEY);
Serial.println(")...");
WiFi.begin(_SSID, _KEY);
}
Serial.println("WiFi connected !!");
            mcs.addChannel(Temp);
            while(!mcs.connected())
  {
Serial.println("MCS.connect()...");
mcs.connect();
  }
Serial.println("MCS connected !!");
             }
void loop() {
  Serial.print("process(");
  Serial.print(millis());
  Serial.println(")");
  mcs.process(100);
  Temp.set(analogRead(14));
  while(!mcs.connected())
  {
    Serial.println("re-connect to MCS...");
    mcs.connect();
    if(mcs.connected())
      Serial.println("MCS connected !!");
  }
}
